<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	
	<security:global-method-security />
	
	<security:http auto-config="false" 
				entry-point-ref="authenticationProcessingFilterEntryPoint" 
				access-decision-manager-ref="accessDecisionManager" 
				access-denied-page="/app/templates/includes/access_denied.jsp">			

		<security:intercept-url pattern="/app/restricted/**" access="SITE_USER"/>
		
	    <security:anonymous />
		<security:logout logout-url="/app/restricted/logout.jsp" 
					logout-success-url="/app/open/logout.jspx" invalidate-session="true"/>
					
		<security:custom-filter position="FORM_LOGIN_FILTER" ref="authenticationProcessingFilter" />	    
	</security:http>

	<bean id="authenticationProcessingFilter" 
			class="pt.ual.mgi.auth.MgiAuthenticationProcessingFilter">
        <property name="filterProcessesUrl" value="/app/open/j_spring_security_check.jspx" />
		<property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
		<property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>
	
	<bean id="authenticationSuccessHandler" class="pt.ual.mgi.auth.MgiAuthSuccessHandler">
		<property name="defaultTargetUrl" value="/app/restricted/home.jspx" />
	</bean>
	
	<bean id="authenticationFailureHandler" class="pt.ual.mgi.auth.MgiAuthFailureHandler">
		<property name="defaultFailureUrl" value="/app/open/login.jspx?loginError=true" />
	</bean>	

	<bean id="authenticationProcessingFilterEntryPoint" 
			class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/app/open/login.jspx?exp=true" />
		<property name="forceHttps" value="false" />
	</bean>

	<security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="ldapProvider" />
    </security:authentication-manager>
    
	<!-- Must declare this bean to override the rolePrefix property -->
    <bean id="accessDecisionManager" 
    		class="org.springframework.security.access.vote.AffirmativeBased">
    	<constructor-arg>
    		<list>
                <bean class="org.springframework.security.access.vote.RoleVoter" > 
	            	<property name="rolePrefix" value=""/>
                </bean>
            </list>
    	</constructor-arg>
        <property name="allowIfAllAbstainDecisions" value="false"/>
    </bean>
	
	<!-- ################################################################################ -->
	<!-- ################################ LDAP CONFIG ################################### -->	
	<!-- ################################################################################ -->    

	<bean id="dirContextValidator" 
		class="pt.ual.mgi.ldap.MgiLdapConnectionValidator">
		<constructor-arg ref="ldapProperties" />
	</bean>

	<bean id="contextSource"
        class="pt.ual.mgi.ldap.MgiLdapSecurityContextSource">
        <constructor-arg ref="ldapProperties" />
	</bean>
	
	<bean id="pooledContextSource"
        class="org.springframework.ldap.pool.factory.PoolingContextSource">
        <property name="contextSource" ref="contextSource" />
        <property name="dirContextValidator" ref="dirContextValidator" />
		<property name="testOnBorrow" value="true" />
	</bean>

	<bean id="userSearch"
		class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
		<constructor-arg index="0" value="" />
		<constructor-arg index="1" value="(uid={0})" />
		<constructor-arg index="2" ref="contextSource" />
	</bean> 

	<bean id="ldapProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">   
    	<constructor-arg>
           <bean class="org.springframework.security.ldap.authentication.BindAuthenticator">
               	<constructor-arg ref="contextSource"/>
           		<!-- <property name="userDnPatterns" >
        	   		<list>
        	   			<value>cn={0},o=IdMan</value>
        	   		</list>
      			</property> -->
      			<property name="userSearch" ref="userSearch"/>   
           </bean>
       </constructor-arg>
       
       
         
       <constructor-arg>  
           <bean class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator">
               <constructor-arg ref="pooledContextSource"/>   
               <constructor-arg value=""/>   
               <property name="groupRoleAttribute" value="roles"/>   
               <property name="groupSearchFilter"  value="(&amp;(objectclass=groupOfUniqueNames)(uniqueMember={0}))"/>   
               <property name="searchSubtree" value="true"/>
               <property name="rolePrefix" value=""/>
           </bean>
       </constructor-arg>
       <property name="userDetailsContextMapper" ref="mgiDetailsMapper" />
	</bean> 

	<bean name="mgiDetailsMapper" class="pt.ual.mgi.ldap.MgiUserDetailsMapper">
			<property name="rolePrefix" value=""/>
	</bean>

</beans>